Dodajemy klasę definiującą dialog do edycji waluty. Importując klasę AlertDialog należy pamiętać, by użyć implementacji z biblioteki suportowej v7. DialogFragment użyjemy z support v4.

public class RateChangeDialogFragment extends DialogFragment {

	private static final String CURRENCY_BUNDLE_KEY = "CURRENCY_BUNDLE_KEY";

	private OnCurrencyChangedListener onCurrencyChangedListener;
	private ExchangeRate currencyRate;

	private EditText inputEditText;

	public static RateChangeDialogFragment getInstance(ExchangeRate rate) {
		Bundle bundle = new Bundle();
		bundle.putSerializable(CURRENCY_BUNDLE_KEY, rate);

		RateChangeDialogFragment fragment = new RateChangeDialogFragment();
		fragment.setArguments(bundle);

		return fragment;
	}

	@Override
	public void onAttach(Activity activity) {
		super.onAttach(activity);

		// This makes sure that the container activity has implemented
		// the callback interface. If not, it throws an exception
		try {
			onCurrencyChangedListener = (OnCurrencyChangedListener) activity;
		} catch (ClassCastException e) {
			throw new ClassCastException(activity.toString() + " must implement OnCurrencyChangedListener");
		}

		currencyRate = (ExchangeRate) getArguments().getSerializable(CURRENCY_BUNDLE_KEY);
	}

	@Override
	public Dialog onCreateDialog(Bundle savedInstanceState) {
		inputEditText = createInputEditText();

		return new AlertDialog.Builder(getActivity()) //
				.setIcon(R.mipmap.ic_launcher) //
				.setTitle(R.string.dialog_title) //
				.setMessage(R.string.dialog_message) //
				.setPositiveButton(R.string.ok, new PositiveOnClickListener()) //
				.setNegativeButton(R.string.cancel, null) //
				.setView(inputEditText) //
				.create();
	}

	private EditText createInputEditText() {
		EditText input = new EditText(getActivity());
		input.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);
		input.addTextChangedListener(new CurrencyTextWatcher());
		input.setText(String.valueOf(currencyRate.getRate()));
		return input;
	}

	private boolean isValid(String text) {
		try {
			Float.parseFloat(text);
			return true;
		} catch (NumberFormatException e) {
			return false;
		}
	}

	private class PositiveOnClickListener implements DialogInterface.OnClickListener {

		@Override
		public void onClick(DialogInterface dialog, int which) {
			changeExchangeRate();
		}
	}

	private void changeExchangeRate() {
		if (isValid(inputEditText.getText().toString())) {
			onCurrencyChangedListener.onRateChanged(currencyRate);
		} else {
			Toast.makeText(getActivity(), R.string.invalid, Toast.LENGTH_SHORT).show();
		}
	}

	private class CurrencyTextWatcher implements TextWatcher {

		@Override
		public void onTextChanged(CharSequence s, int start, int before, int count) {
		}

		@Override
		public void beforeTextChanged(CharSequence s, int start, int count, int after) {
		}

		@Override
		public void afterTextChanged(Editable s) {
			if (isValid(s.toString())) {
				currencyRate.setRate(Float.parseFloat(s.toString()));
			}
		}
	}

	public interface OnCurrencyChangedListener {

		void onRateChanged(ExchangeRate currency);
	}
}


Dodajemy zasoby tekstowe:

<string name="dialog_title">Zmiana waluty</string>
<string name="dialog_message">Zmieńmy wartość przelicznika</string>
<string name="ok">OK</string>
<string name="cancel">Cancel</string>
<string name="invalid">Nieprawidłowa liczba</string>


W MainActivity dodajemy obsługę klikania na drugi button:

changeCurrencyDialogButton.setOnClickListener(new View.OnClickListener() {
	@Override
	public void onClick(View v) {
	RateChangeDialogFragment.getInstance(currentExchangeRate).show(getSupportFragmentManager(), "tag");	
}
});


Oraz implementujemy interfejs OnCurrencychangedListener w MainActivity

public class MainActivity extends AppCompatActivity implements RateChangeDialogFragment.OnCurrencyChangedListener

@Override
public void onRateChanged(ExchangeRate exchangeRate) {
	currentExchangeRate = exchangeRate;
	currentCurrency.setText("Twoja waluta to: " + exchangeRate.getCountry() + " " + exchangeRate.getCurrency() + "\nKurs: " + exchangeRate.getRate());
	SharedPreferencesSupporter.saveCurrentRate(exchangeRate, this);
}