W Build gradle nalezy dodac linijke:

compile 'com.squareup.retrofit2:retrofit:2.0.0'
compile 'com.squareup.retrofit2:converter-gson:2.0.0'


Tworzymy API które definiuje punkty dostępu do serwisu.

public interface JsonRatesService {

	@GET("/list/USD")
	Call<RatesList> getCurrencyTable();
}


W ListCurrenciesActivity w metodzie onCreate() konfigurujemy adapter serwisu.

Bedzie tez trzeba dodac zasob tekstowy o nazwie webservice_url i wartosci http://83.230.72.199:8086

Retrofit restAdapter = new Retrofit.Builder()
        .baseUrl(getString(R.string.webservice_url) + ":" + getString(R.string.webservice_port))
        .addConverterFactory(GsonConverterFactory.create())
        .build();

service = restAdapter.create(JsonRatesService.class);


Musimy jeszcze dodać pole:

private JsonRatesService service;


Oraz nowy zasób tekstowy:

<string name="webservice_port">8086</string>


Pobieranie z Internetu wywoływane musi być na osobnym wątku, inaczej wyrzucony zostanie wyjątek NetworkOnMainThreadException. Dlatego użyjemy asynchronicznego wywołania Call’a.

private void loadData() {
    dialog.show();

    service.getCurrencyTable().enqueue(new Callback<RatesList>() {
        @Override
        public void onResponse(Call<RatesList> call, Response<RatesList> response) {
            dialog.dismiss();
            currencyListView.setAdapter(new CurrencyListAdapter(ListCurrenciesActivity.this, response.body()));
        }

        @Override
        public void onFailure(Call<RatesList> call, Throwable t) {
            dialog.dismiss();
            Toast.makeText(ListCurrenciesActivity.this, "Something went wrong", Toast.LENGTH_SHORT).show();
        }
    });
}

Dodajemy pole w klasie:

private AlertDialog dialog;

W metodzie onCreate dodajemy:

dialog = new ProgressDialog(this);
dialog.setMessage(getString(R.string.please_wait));

Dodajemy zasób tekstowy:

<string name="please_wait">Proszę czekać</string>

Pozostaje w metodzie onCreate wywołać metodę loadData.

loadData();

Usuwamy dane testowe z metody onCreate:

CurrencyListAdapter adapter = new CurrencyListAdapter(this, MockData.getListOfRates());
currencyListView.setAdapter(adapter);